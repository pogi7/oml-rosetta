name: Rosetta P2 and OS artifacts Deployment

# Controls when the workflow will run
on:
  # ** means all branches and tags
  push:
    tags: '*' # only push on tags

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "workbench_workflow"
  workbench_workflow:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Environment variable 
    env:
      ZIP_PRODUCTS_PATH: io.opencaesar.rosetta.product/target/products/rosetta-*
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Tagged Build
    # - name: Set tag env variable
    #   run: echo "LATEST_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java 
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          # https://github.com/actions/setup-java#supported-distributions
          distribution: 'adopt'
        
        # --batch-modes and --update-snapshots
      - name: Build OS binaries and p2 artifacts
        run: mvn -B -U verify
        # ${{ github.ref_name }} is most recent tag name.  For workflows triggered by push, this is the branch or tag ref that was pushed.
        # https://docs.github.com/en/actions/learn-github-actions/contexts
      - name: Set version
        run: $GITHUB_WORKSPACE/setversion.sh ${{ github.ref_name }} && $GITHUB_WORKSPACE/io.opencaesar.rosetta.product/setversion.sh 


      - name: Deploy p2 artifacts
      # settings file encodes credentials needed to write to Github
        run: mvn deploy -Prelease-composite -Dgithub-update-repo=https://x-access-token:${{ env.GITHUB_TOKEN }}@github.com/pogi7/oml-rosetta-p2

      - name: Create Github Release
        id: create-release     
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        with: 
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Changes in this release
            - First Change
            - Second Change
      
      - name: Upload OS binaries to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_name: OS binaries
          asset_path: ${{ env.PRODUCTS_PATH }}
          asset_content_type: application/zip

      